name: Flask App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.8

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pandas scikit-learn numpy requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests
      run: |
        python -m pip install pytest
        pytest tests/ || echo "No tests found"

    - name: Run Flask application test
      run: |
        python app.py &
        sleep 5
        curl http://localhost:5000 || exit 1
        pkill -f "python app.py"

    - name: Build artifacts
      run: |
        mkdir -p dist/static
        
        # First, copy all static files
        if [ -d "build" ]; then
          cp -r build/* dist/
        else
          cp -r templates/* dist/
        fi
        
        # Create data directory for model files
        mkdir -p dist/static/data
        
        # Copy and validate model files
        for file in movies.pkl similarity.pkl; do
          if [ -f "$file" ]; then
            if [ ! -L "$file" ]; then
              file_size=$(stat -c%s "$file")
              if [ $file_size -lt 10737418240 ]; then
                cp --preserve=timestamps "$file" dist/static/data/ || echo "Failed to copy $file"
                echo "Copied $file ($(($file_size/1024/1024))MB)"
              else
                echo "Error: $file is too large ($(($file_size/1024/1024))MB)"
                exit 1
              fi
            else
              echo "Warning: Skipping symlink $file"
            fi
          else
            echo "Warning: $file not found"
          fi
        done
        
        # Add .nojekyll file
        touch dist/.nojekyll
        
        # Create a simple index.html if it doesn't exist
        if [ ! -f "dist/index.html" ]; then
          cp dist/home.html dist/index.html 2>/dev/null || echo "No home.html found"
        fi
        
        echo "Validating final artifact structure..."
        find dist -type l -exec echo "Error: Found symlink: {}" \; -exec exit 1 \;
        total_size=$(du -sb dist | cut -f1)
        if [ $total_size -gt 10737418240 ]; then
          echo "Error: Total artifact size ($(($total_size/1024/1024))MB) exceeds 10GB limit"
          exit 1
        fi
        echo "Total artifact size: $(($total_size/1024/1024))MB"
        
        # List final structure
        echo "Final directory structure:"
        ls -R dist/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flask-app
        path: dist/

    - name: Display structure of downloaded files
      run: ls -R dist/

  deploy:
    needs: test-and-build  # wait for the "build" job to get done before executing this "deploy" job

    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name == 'push'  # deploy only on push
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: flask-app